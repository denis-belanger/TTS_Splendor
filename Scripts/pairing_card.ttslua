-- Include Files
#include !\TTS_Splendor\Scripts\Helpers\split_string

-- Set the paired state of the card
paired = false

--// Triggers when an object collides with another object //--
function onCollisionEnter(info)
    pair(info.collision_object)
end

--// Duplicate the points of the card this card is dropped on, display the points deca;, and add an 'Unpair' button //--
function pair(object)
    -- Exit the function if this card is alreay paired
    if paired == true then return end
    -- Exit the function if the colliding object isn't a card
    if object.type ~= "Card" then return end
    -- Exit the funtion if the collinding card is above this card
    if object.getPosition().y >= self.getPosition().y then return end
    -- Exit the function if the colliding card doesn't have a name
    if object.getName() == nil then return end
    -- Exit the function if the colliding card is another pairing card
    if string.match(object.getName(), "Pairing") ~= nil then return end
    -- Exit the function if the colliding card name doesn't contain 'card' or 'Cards'
    if string.match(object.getName(), "card") == nil and string.match(object.getName(), "Card") == nil then return end

    -- Set the paired state of this card
    paired = true
    -- Get the gem type from the name of the colliding card
    gem_type = split(object.getName(), " ")[1]
    -- Set the name of this card to include the gem type of the colliding card
    self.setName(gem_type .. " (" .. self.getName() .. ")")
    -- Update the total count for the gem type for the zone containing this card if applicable
    Global.call("triggerCountGem", self)

    -- Create the 'Unpair' button so that this card can be unpaired
    self.createButton({
        click_function = "unpair",
        function_owner = self,
        label          = "Unpair",
        position       = {0, 0.5, 0.73},
        height         = 700,
        width          = 960,
        font_size      = 200
    })

    -- Set the parameters for placing the points decal
    local decal_position   = {-0.499194, 0.363151, -0.979614}
    local decal_rotation   = {90, 180, 0}
    local decal_scale      = {0.3626, 0.333333, 6.153847}
    local decal_parameters = {name = "", url = "", position = decal_position, rotation = decal_rotation, scale = decal_scale}

    -- Apply the decal to this card according to the points of the colliding cards
    if string.match(object.getName(), "Diamond") ~= nil then
        decal_parameters.name = "Pairing Card Decal - Diamond"
        decal_parameters.url  = "http://cloud-3.steamusercontent.com/ugc/2018221770485259212/AD1C9EF5B3CC6A025EE72EC102A11C372E786DDA/"
    elseif string.match(object.getName(), "Sapphire") ~= nil then
        decal_parameters.name = "Pairing Card Decal - Sapphire"
        decal_parameters.url  = "http://cloud-3.steamusercontent.com/ugc/2018221770485263826/A57ACDB69E64115549A4501E128D986BCB8A04D7/"
    elseif string.match(object.getName(), "Emerald") ~= nil then
        decal_parameters.name = "Pairing Card Decal - Emerald"
        decal_parameters.url  = "http://cloud-3.steamusercontent.com/ugc/2018221770485262139/29C86F9DADDD5E2B41D8AD0235D246BEE13D047A/"
    elseif string.match(object.getName(), "Ruby") ~= nil then
        decal_parameters.name = "Pairing Card Decal - Ruby"
        decal_parameters.url  = "http://cloud-3.steamusercontent.com/ugc/2018221770485260894/CBEC84FAE34D12968B512BE2053FB19AF9F44837/"
    else
        decal_parameters.name = "Pairing Card Decal - Onyx"
        decal_parameters.url  = "http://cloud-3.steamusercontent.com/ugc/2018221770485152463/0C43816527DBF586687A6A434F148027F639FDDE/"
    end
    self.setDecals({decal_parameters})
end

--// Reset the name of this card and remove the button from it //--
function unpair()
    -- Set the paired state of this card
    paired = false
    -- Mark this card for unpairing
    self.setName(self.getName() .. " (Unpairing...)")
    -- Remove all buttons from this card
    for i = 0, #self.getButtons() - 1 do
        self.removeButton(i)
    end
    -- Remove all decals from this card
    self.setDecals({})
    -- Update the total count for the gem type for the zone containing this card if applicable
    Global.call("triggerCountGem", self)
    -- Reset the name of this card
    self.setName("Pairing Card")
end
